{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nimport groq from \"groq\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../client\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nfunction Post(props) {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\",\n    categories,\n    authorImage,\n    body = []\n  } = props;\n  return React.createElement(\"article\", null, React.createElement(\"h1\", null, title), React.createElement(\"span\", null, \"By \", name), categories && React.createElement(\"ul\", null, \"Posted in\", categories.map(category => React.createElement(\"li\", {\n    key: category\n  }, category))), authorImage && React.createElement(\"div\", null, React.createElement(\"img\", {\n    src: urlFor(authorImage).width(50).url()\n  })), React.createElement(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: \"max\"\n    }\n  }, client.config())));\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  body\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}